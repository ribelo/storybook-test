import{w as D}from"./components-q4nWHTTd.js";import"./index-BBkUAzwr.js";import"./index-DfbGmgP0.js";const A={title:"Frisco/LabeledTextarea",component:D,tags:["autodocs"],parameters:{docs:{description:{component:"A labeled multi-line text input component with various states and variants."}}},argTypes:{label:{control:"text",description:"Label text for the textarea."},variant:{control:"select",options:["default","float","notched"],description:"Variant of the labeled textarea."},errors:{control:"object",description:"Error object for displaying validation errors."},class:{control:"text",description:"Additional CSS classes for the component."},"input-props":{control:"object",description:"Props for the underlying TextArea component."},rules:{control:"object",description:"Validation rules for the textarea."}}},e=j=>D(j),a=e.bind({});a.args={label:"Default Textarea",variant:"default","input-props":{name:"default-textarea",placeholder:"Enter your text here..."}};const r=e.bind({});r.args={label:"Floating Label",variant:"float","input-props":{name:"floating-textarea",placeholder:"Enter your text here..."}};const t=e.bind({});t.args={label:"Notched Label",variant:"notched","input-props":{name:"notched-textarea",placeholder:"Enter your text here..."}};const o=e.bind({});o.args={label:"Textarea with Error",variant:"default",errors:{"error-textarea":{message:"This field is required"}},"submitted?":!0,"input-props":{name:"error-textarea",placeholder:"This textarea has an error"}};const s=e.bind({});s.args={label:"Textarea with Max Length",variant:"default",rules:{maxLength:{value:512}},"input-props":{name:"max-length-textarea",placeholder:"This textarea has a maximum length of 512 characters"}};const l=e.bind({});l.args={label:"Disabled Textarea",variant:"default","input-props":{name:"disabled-textarea",placeholder:"This textarea is disabled",disabled:!0}};var i,n,c;a.parameters={...a.parameters,docs:{...(i=a.parameters)==null?void 0:i.docs,source:{originalSource:"args => LabeledTextarea(args)",...(c=(n=a.parameters)==null?void 0:n.docs)==null?void 0:c.source}}};var d,p,u;r.parameters={...r.parameters,docs:{...(d=r.parameters)==null?void 0:d.docs,source:{originalSource:"args => LabeledTextarea(args)",...(u=(p=r.parameters)==null?void 0:p.docs)==null?void 0:u.source}}};var m,b,x;t.parameters={...t.parameters,docs:{...(m=t.parameters)==null?void 0:m.docs,source:{originalSource:"args => LabeledTextarea(args)",...(x=(b=t.parameters)==null?void 0:b.docs)==null?void 0:x.source}}};var h,g,f;o.parameters={...o.parameters,docs:{...(h=o.parameters)==null?void 0:h.docs,source:{originalSource:"args => LabeledTextarea(args)",...(f=(g=o.parameters)==null?void 0:g.docs)==null?void 0:f.source}}};var L,T,v;s.parameters={...s.parameters,docs:{...(L=s.parameters)==null?void 0:L.docs,source:{originalSource:"args => LabeledTextarea(args)",...(v=(T=s.parameters)==null?void 0:T.docs)==null?void 0:v.source}}};var E,S,y;l.parameters={...l.parameters,docs:{...(E=l.parameters)==null?void 0:E.docs,source:{originalSource:"args => LabeledTextarea(args)",...(y=(S=l.parameters)==null?void 0:S.docs)==null?void 0:y.source}}};const M=["Default","FloatingLabel","NotchedLabel","WithError","WithMaxLength","Disabled"];export{a as Default,l as Disabled,r as FloatingLabel,t as NotchedLabel,o as WithError,s as WithMaxLength,M as __namedExportsOrder,A as default};
