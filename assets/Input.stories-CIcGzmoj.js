import{r as n}from"./components-q4nWHTTd.js";import"./index-BBkUAzwr.js";import"./index-DfbGmgP0.js";const a={title:"Frisco/Input",component:n,tags:["autodocs"],parameters:{docs:{description:{component:"The Frisco Input component is a versatile input element that can be used in various forms and data entry scenarios. It provides extensive customization options and supports features like error handling, success states, and input visibility toggling."}}},argTypes:{type:{control:"text",description:"The type of input (e.g., 'text', 'password', 'email')."},"error?":{control:"boolean",description:"Indicates whether there is an input error."},"success?":{control:"boolean",description:"Indicates whether the input is in a successful state."},"input-style":{control:"object",description:"Custom styles to apply to the input element."},"toggle-visibility?":{control:"boolean",description:"Allows toggling input visibility for password fields."},icon:{description:"An optional icon to display within the input field."},"hidden?":{control:"boolean",description:"Hides the input element when true."},"input-ref":{control:"object",description:"A reference to the input element for programmatic access."},"on-change":{action:"changed",description:"Triggered when the input value changes."},"on-focus":{action:"focused",description:"Triggered when the input gains focus."},"on-blur":{action:"blurred",description:"Triggered when the input loses focus."},disabled:{control:"boolean",description:"Disables the input when true."},placeholder:{control:"text",description:"Placeholder text displayed in the input."},checked:{control:"boolean",description:"Indicates whether a checkbox or radio input is checked."},id:{control:"text",description:"A unique identifier for the input element."},name:{control:"text",description:"The name attribute of the input element."},class:{control:"text",description:"Additional CSS classes for styling and customization."}},args:{disabled:!1,type:"text",placeholder:"placeholder","error?":!1,"success?":!1,"input-style":{},"toggle-visibility?":!1,icon:null,"hidden?":!1,"input-ref":{}}},e={};var t,i,o;e.parameters={...e.parameters,docs:{...(t=e.parameters)==null?void 0:t.docs,source:{originalSource:"{}",...(o=(i=e.parameters)==null?void 0:i.docs)==null?void 0:o.source}}};const l=["Primary"];export{e as Primary,l as __namedExportsOrder,a as default};
